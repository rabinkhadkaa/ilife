trigger:
  - main

variables:
  dockerRegistryServiceConnection: 'ilifesregistry'
  imageName: 'ilifes-store'
  acrName: 'ilifesregistry.azurecr.io'
  sshServiceConnection: 'ilifes-ssh-connection'
  appDirectory: '/var/www/html'
  containerName: 'ilifes_web'

stages:
  - stage: Build
    displayName: 'Build and Push Docker Image'
    jobs:
      - job: Build
        displayName: 'Build and Push'
        pool:
          name: 'DO-Agent-Pool'
        steps:
          - task: Docker@2
            displayName: 'Login to ACR'
            inputs:
              command: login
              containerRegistry: $(dockerRegistryServiceConnection)

          - task: Docker@2
            displayName: 'Build Docker Image'
            inputs:
              command: build
              repository: $(acrName)/$(imageName)
              dockerfile: dockerfile
              tags: latest

          - task: Docker@2
            displayName: 'Push Docker Image to ACR'
            inputs:
              command: push
              repository: $(acrName)/$(imageName)
              tags: latest

  - stage: Deploy
    displayName: 'Deploy Application'
    dependsOn: Build
    jobs:
      - job: Deploy
        displayName: 'Deploy on Remote Server'
        pool:
          name: 'DO-Agent-Pool'
        steps:
          - script: |
              echo "SSH Service Connection: $(sshServiceConnection)"
            displayName: 'Debug: Print SSH Service Connection'

          - task: SSH@0
            displayName: 'Debugging: List Files in App Directory'
            inputs:
              sshEndpoint: $(sshServiceConnection)
              runOptions: 'commands'
              commands: |
                ls -la $(appDirectory)

          - task: SSH@0
            displayName: 'Pull and Restart Docker Containers'
            inputs:
              sshEndpoint: $(sshServiceConnection)
              runOptions: 'commands'
              commands: |
                cd $(appDirectory)
                docker-compose down
                docker pull $(acrName)/$(imageName):latest
                docker-compose up -d
              readyTimeout: '60000'